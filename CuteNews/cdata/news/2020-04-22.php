<?php die('Direct call - access denied'); ?>
YToxOntpOjE1ODc1NjA0ODI7YToxNDp7czoyOiJpZCI7aToxNTg3NTYwNDgyO3M6MToidCI7czo1NToiTkFKTEVQxaBFIExPS0FDSUpFIFpBIFNLT0sgUyBQQURBTE9NIFYgVEFOREVNVSBOQSBTVkVUVSI7czoxOiJ1IjtzOjQ6ImVyaWsiO3M6MToiYyI7czowOiIiO3M6MToicyI7czozMTE6IlNlZGFqLCBrbyBzZSBwb8SNYXNpIHBvbWxhZCBwcmlibGnFvnVqZSBrb25jdSDigJMgxI1lIG5hbSB1c3BlIHphIHRyZW51dGVrIG9kbWlzbGl0aSBrb3JvbmEgc2l0dWFjaWpvIOKAkyBzZSBwb8SNYXNpIHphxI1lbmphIMSNYXMsIGtvIHphxI1uZW1vIHJhem1pxaFsamF0aSB2bmFwcmVqIGluIHphxI1uZW1vIGlza2F0aSBwcmltZXJuZSBvcGNpamUgemEgcG9sZXRuZSBwb8SNaXRuaWNlLiBWIHRhIG5hbWVuLCB2YW0gYm9tIG9waXNhbCBuZWthaiBpem1lZCBuYWpsZXDFoWloIGRlc3RpbGFjaWogemEgc2tvayBzIHBhZGFsb20gbmEgc3ZldHUuIjtzOjE6ImYiO3M6Mzk0MDoiU2VkYWosIGtvIHNlIHBvxI1hc2kgcG9tbGFkIHByaWJsacW+dWplIGtvbmN1IOKAkyDEjWUgbmFtIHVzcGUgemEgdHJlbnV0ZWsgb2RtaXNsaXRpIGtvcm9uYSBzaXR1YWNpam8g4oCTIHNlIHBvxI1hc2kgemHEjWVuamEgxI1hcywga28gemHEjW5lbW8gcmF6bWnFoWxqYXRpIHZuYXByZWogaW4gemHEjW5lbW8gaXNrYXRpIHByaW1lcm5lIG9wY2lqZSB6YSBwb2xldG5lIHBvxI1pdG5pY2UuIFYgdGEgbmFtZW4sIHZhbSBib20gb3Bpc2FsIG5la2FqIGl6bWVkIG5hamxlcMWhaWggZGVzdGlsYWNpaiB6YSBza29rIHMgcGFkYWxvbSBuYSBzdmV0dS4NCg0KMS4JU2t5ZGl2ZSBFbXB1cmlhYnJhdmEsIEVtcHVyaWFicmF2YSwgxaBwYW5pamENCg0KU2t5ZGl2ZSBFbXB1cmlhYnJhdmEsIGplIGVkZW4gaXptZWQgbmFqYm9saiBvYmlza2FuaWggcGFkYWxza2loIGNlbnRyb3YgdiBFdnJvcGkuIEdyZSB6YSB6ZWxvIHVzcGXFoW5vIMWhcG9ydG5vIGxldGFsacWhxI1lLCBraSB1cHJhdmxqYSBzIHRyZW1pIGxldGFsaSAoVHdpbiBPdHRlciwgQmVlY2ggQjk5LCBQaWxhdHVzIFBvcnRlcikuIFYgbmVwb3NyZWRuaSBibGnFvmluaSBsZXRhbGnFocSNYSBwYSBpbWFqbyB0dWRpIHZldHJvdm5payBpbiBuYXByYXZvIHphIHVtZXRuaSB2YWwuIE5hanZlxI1qaSBwbHVzIHRlIGxva2FjaWplIHBhIGplIG5qZW5hIGxlZ2EsIHNhaiBsZcW+aSBsZSBrYWvFoW5lIDNrbSBvZCBvYmFsZSB2IHRha28gaW1lbm92YW5lbSBaYWxpdnUgVnJ0bmljLCBrYXIgcG9tZW5pLCBkYSBqZSByYXpnbGVkIG9iIHNrb2t1IHMgcGFkYWxvbSBwcmXEjXVkb3ZpdC4NCg0KDQoyLglOem9uZSBza3lkaXZpbmcsIFF1ZWVuc3Rvd24sIE5vdmEgWmVsYW5kaWphDQoNClYgZHLFvmF2aSwga2plciB2YXMgbGFoa28gcHJha3RpxI1ubyB2c2FrYSByYXpnbGVkbmEgdG/EjWthIHB1c3RpIHBvcG9sbm9tYSBicmV6IGJlc2VkLCBvYnN0YWphIHJhemxvZywgemFrYWogamUgbGV0YWxpxaHEjWUgTlpPTkUgZG9iaWxvIG5hZ3JhZG8gwrtTdXByZW1lIE5ldyBaZWFsYW5kIFRvdXJpc20gQXdhcmTCqy4gVG8gbGV0YWxpxaHEjWUsIGtpIGxlxb5pIGJsaXp1IFF1ZWVuc3Rvd25hIGplIG5la2FrxaFuYSBtZWthIGV4dHJlbW5paCDFoXBvcnRvdiB0aXN0ZWdhIGRlbMSNa2Egc3ZldGEuIFRvIGxldGFsacWhxI1lIHZlZG5vIHBvc2tyYmkgemEgemFuaW1pdmUgc2tva2UsIGluIHBhIHphIG5hamxlcMWhZSByYXpnbGVkZSBuYWQgSnXFvm5pbSBPdG9rb20gbmEgTm92aSBaZWxhbmRpamkuDQoNCg0KMy4JU2t5ZGl2ZSBSYW1ibGVycywgVG9vZ2xhd2FoLCBBdnN0cmFsaWphDQoNClNreWRpdmUgUmFtYmxlcnMgbGXFvmkgcmVsYXRpdm5vIGJsaXp1IGF2c3RyYWxza2UgWmxhdGUgb2JhbGUgbmEgZW5pIHN0cmFuaSBpbiBTb27EjW5lIG9iYWxlIG5hIGRydWdpIHN0cmFuaSBpbiBpbWEgdiBzdm9qaSBwb251ZGJpIG5la2FqIHphIMSNaXN0byB2c2FrZWdhIOKAkyBtZWQgZHJ1Z2ltIHR1ZGkgcHJpc3RhamFsbm8gY29ubywga2kgamUgcG9sbmEga2VuZ3VydWpldiEgRHJ1xb5pbmFtIG51ZGlqbyBuYXN0YW5pdGV2IG5hIGtyYWp1IHNhbWVtLCBraSB2IHN2b2pvIHBvbnVkYm8gdmtsanXEjXVqZSB0dWRpIGJhemVuLCBiYXIgaW4gxaFlIG5la2F0ZXJlIGRydWdlIG1vxb5ub3N0aS4gViBBdnN0cmFsaWppIGxhaGtvIHNrYcSNZWpvIMW+ZSBvdHJvY2kgb2QgZHZhbmFqc3RlZ2EgbGV0YSBzdGFyb3N0aSwgc2V2ZWRhIGxlIHogc29nbGFzamVtIHN0YXLFoWV2LiDFoGUgZW4gZG9kYXRlbiBib251cyBwYSBqZSBzZXZlZGEgcG9kbmViamUsIGtpIG9tb2dvxI1hIGxlcG8gdnJlbWUgc2tvemkgY2VsbyBsZXRvLg0KDQoNCjQuCVNreWRpdmUgRHViYWksIER1YmFpLCBaZHJ1xb5lbmkgQXJhYnNraSBFbWlyYXRpDQoNClNreWRpdmUgamUgZW5hIG9kIHJlZGtpaCBkZXN0aW5hY2lqLCBraSBvbW9nb8SNYSBza29rIGRlamFuc2tvIHRpayBuYWQgdmVsaWtpbSBtZXN0b20gRHViYWkgYWxpIHBhIG5hZCB1bWV0bm8gemdyYWplbmltIG90b2tvbSDCu3RoZSBQYWxtIEp1bWVyaWFowqsuIFByaSBza29rdSB0dWthaiBib3N0ZSBsYWhrbyB1xb5pdmFsaSB2IHBvZ2xlZHUgbmEgUGVyemlqc2tpIHphbGl2IGluIHBhIG5hIHBvZ2xlZHUgbmEgRHViYWkuDQoNCg0KNS4JU2t5ZGl2ZSBTb2hvbWlzaCwgV2FzaGluZ3RvbiBzdGF0ZSwgWkRBDQoNCkxlIDIwbWluIGl6dmVuIFNlYXR0bCBsZcW+aSBsZXRhbGnFocSNZSBTb2hvbWlzaCwga2F0ZXJlZ2EgamUgwrt0aGUgVHJhdmVsIENoYW5uZWzCqyBrbGFzaWZpY2lyYWwga290IGVubyBpem1lZCBkZXZldGloIG5hamJvbGrFoWloIGxva2FjaWogemEgc2tvayBzIHBhZGFsb20gbmEgc3ZldHUuIFBvbGV0aSBsYWhrbyB0YW0gdcW+aXZhdGUgdiAzNjDCsCByYXpnbGVkdSBzIGhyaWJvdiBwcm90aSBtb3JqdSwga2kgemFqZW1hIGdvcmkgUmFpbmllciBpbiBCYWtlciwgS2Fza2Fkbm8gZ29yb3ZqZSwgdGVyIG5hIHplbGVuZSBvdG9rZSBTYW4gSnVhbi1hLg0KDQoNCjYuCVNreWRpdmUgVm9zcywgVm9zcywgTm9ydmXFoWthDQoNClYgcGFkYWxza2VtIGNlbnRydSBTa3lkaXZlIFZvc3MgbGFoa28gaXprdXNpdGUgxI1hcm9ibm8ga29tYmluYWNpam8gbmFyYXZlIGluIMK7ZHVoYSBWb3NzYcKrIC0gemVsbyBvZHBydCwgdmFibGppdiBpbiB2a2xqdcSNdWpvxI0gwrt2YWpiwqsga2kgdGFtIHByZXZsYWR1amUuIFBvbGV0amUgamUgbmFqYm9saiDFvml2byBpbiBha3R2aW5vIG9iZG92amUgbmEgTm9ydmXFoWtlbSwgemF0byBvbW9nb8SNYSB2ZWxpa28gYWt0aXZub3N0aSB2IG5hcmF2aS4gUHJhdiB0YWtvIHBhZGFsc2tpIGNlbnRlciBWb3NzICBudWRpIHR1ZGkgbGVwZSBuYXN0YW5pdHZlLCBpbiBwYSB2ZXRyb3ZuaWsgdiBuZXBvc3JlZG5pIGJsacW+aW5pIGxldGFsacWhxI1hLg0KDQoNCjcuCVNreWRpdmUgSnVyaWVuIGJheSwgUGVydGgsIEF2c3RyYWxpamENCg0KVG8gbG9rYWNpam8gcHJpIFBlcnRoLXUsIEF2c3RyYWxpamEgbW5vZ2kgeiBuYW1lbm9uIGltZW51amVqbyBrb3QgwrtuYWpsZXDFoWkga3JhaiB6YSBza29rIG5hIG9iYWxvwqsgbmEgc3ZldHUuIFR1a2FqIGxhaGtvIHXFvml2YXRlIHYgZmFudGFzdGnEjW5lbSBwb2dsZWR1IG5hIFR1cmtpem5vIG9iYWxvIHNrb3ppIGNlbG90ZW4gc2tvaywga28gcGEgcHJpc3RhbmV0ZSwgc2UgbGFoa28gb2RwcmF2aXRlIHYgUGVydGgsIGtpIGltYSBwZXN0cm8gcG9udWRibyB6YSBvYmlza292YWxjZS4NCg0KDQo4LglTa3lkaXZlIE1vc3NlbCBiYXksIE1vc3NlbCBiYXksIEp1xb5uYSBBZnJpa2ENCg0KVGEgcGFkYWxza2kgY2VudGVyIG9iIHBhbm9yYW1za2VtIGxldHUgbmFkIG9ibW/EjWplbSBNb3NzZWwgQmF5LWEgbnVkaSBpemplbWVuIHJhemdsZWQgbmEgSW5kaWpza2kgb2NlYW4sIGdvcm92amUgT3V0ZW5pcXVhIGluIHByZWxlcGUgcGxhxb5lLiBOYSB2b2xqbyBpbWFqbyBkdmUgcHJpc3RhamFsbmkgb2Jtb8SNamkg4oCTIGVubyBvZCB0ZWggbGXFvmkgbmEgc2FtZW0gbGV0YWxpxaHEjXUsIGRydWdvIHBhIG5hIERpYXogYmVhY2gtdS4gUHJpc3RhbmtpIG5hIERpYXogYmVhY2gtdSBzbyBvZHZpc25pIG9kIHZyZW1lbnNraWggcmF6bWVyIGluIHZpxaFpbmUgcGxpbWUuDQoNCg0KOS4JU2t5ZGl2ZSBBbGdhcnZlLCBBbHZvciwgUG9ydHVnYWxza2ENCg0KU2t5ZGl2ZSBBbGdhcnZlIGxlxb5pIG5hIGp1xb5uZW0gUG9ydHVnYWxza2VtLCBvYiBtZXN0ZWN1IG9iIG1vcmp1IGtpIHNlIGltZW51amUgQWx2b3IuIFNreWRpdmUgQWxnYXJ2ZSBudWRpIDM2NSBkbmkgbGVwZWdhIHZyZW1lbmEgbGV0bm8uIFNrb2tpIG5hIHBsYcW+bywgc29uY2UsIHZpc29rZSB2acWhaW5lLCBkb2JyYSBocmFuYSBpbiBvZGxpxI1ubyB2aW5vLiBLYWogdmXEjSBzaSBsYWhrbyDEjWxvdmVrIMWhZSBzcGxvaCDFvmVsaT8NCiI7czoyOiJodCI7YjowO3M6Mjoic3QiO3M6MDoiIjtzOjI6ImNvIjthOjA6e31zOjI6ImNjIjtiOjA7czoyOiJ0ZyI7czowOiIiO3M6MjoicGciO3M6MDoiIjtzOjI6Im1mIjthOjA6e31zOjQ6InZjbnQiO2k6Mjg5O319